#%RAML 0.8

title: Weather app API
baseUri: http://localhost/api/{version}
version: v0

/weather:
	/{city_id}:
		description: |
			Информация о погоде в городе №{city_id}.
		get:
			responses:
				200:
					body:
						application/json:
							schema: |
								{
									"$schema": "http://json-schema.org/schema",
									"type": "object",
									"properties": {
										"temperature": {
											"type": "number",
										},
										"temperatureFeelsLike": {
											"type": "number",
										},
										"windVelocity": {
											"type": "number"
										},
										"windDirection": {
											"type": "string",
											"pattern": "^(S{1,2}|N{1,2})(E{1,2}|W{1,2})$"
										},
										"weatherThumbnailURL": {
											"type": "string"
										},
										"weatherInWords": {
											"type": "string"
										},
										"outOfDate": {
											"type": "boolean"
										}
									},
									"required": ["temperature","temperatureFeelsLike","windVelocity","windDirection", "weatherThumbnailURL", "weatherInWords"]
								}
				404:
		post:
			description: |
				Обновляет сохранённое в кэше состояние погоды для заданного города.
				Только для отладки.
			body:
				multipart/form-data:
					formParameters:
						city_id:
							type: integer
						_id:
							type: string
						updated:
							type: string
						state.temperature:
							type: float
						state.temperatureFeelsLike:
							type: float
						state.windVelocity:
							type: float
						state.windDirection:
							type: string
						state.weatherThumbnailURL:
							type: string
						state.weatherInWords:
							type: string
	/cached:
		get:
			description: |
				Закэшированная информация о погоде.
				Только для отладки.
			responses:
				200:
					body:
						application/json:
							schema: |
								{
									"$schema": "http://json-schema.org/schema",
									"type": "object",
									"properties": {
										"records": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"city_id": {
														"type": "integer",
														"description": "id города"
													},
													"_id": {
														"type": "string"
													},
													"state": {
														"type": "object",
														"properties": {
															"temperature": {
																"type": "number",
															},
															"temperatureFeelsLike": {
																"type": "number",
															},
															"windVelocity": {
																"type": "number"
															},
															"windDirection": {
																"type": "string",
																"pattern": "^(S{1,2}|N{1,2})(E{1,2}|W{1,2})$"
															},
															"weatherThumbnailURL": {
																"type": "string"
															},
															"weatherInWords": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									}
								}

/cloth:
	/items:
		post:
			description: |
				Создаёт новый предмет одежды.
			body:
				multipart/form-data:
					formParameters:
						description.name:
							type: string
						description.description:
							type: string
						description.img:
							type: file
						description.group:
							type: string
						conditions:
							type: string
			responses:
				201:
				400:
		get:
			description: |
				Информация о всех предметах одежды.
			responses:
				200:
					body:
						application/json:
							schema: |
								{
									"$schema": "http://json-schema.org/schema",
									"type": "object",
									"properties": {
										"items": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"description": {
														"type": "object",
														"description": "Описание предмета гардероба."
														"properties": {
															"name": {
																"type": "string",
																"description": "Название"
															},
															"description": {
																"type": "string",
																"description": "Текст - описание"
															},
															"group": {
																"type": "string",
																"description": "Группа. Определяет, где рисовать картинку."
															},
															"img": {
																"type": "string",
																"description": "URL файла картинки."
															}
														},
														"required": ["name","description","group","img"]
													},
													"_id": {
														"type": "string"
													},
													"conditions": {
														"type": "string"
													},
													"required": ["description","_id","conditions"]
												}
											}
										}
									}
								}
		/{item_id}:
			get:
				description: |
					Возвращает информацию о предмете гардероба.
					Не использовать.
				responses:
					200:
						body:
							application/json:
								schema: |
									{
										"$schema": "http://json-schema.org/schema",
										"type": "object",
										"description": "Описание предмета гардероба."
										"properties": {
											"name": {
												"type": "string",
												"description": "Название"
											},
											"description": {
												"type": "string",
												"description": "Текст - описание"
											},
											"group": {
												"type": "string",
												"description": "Группа. Определяет, где рисовать картинку. Вызов /cloth/choose возвращает не более одного предмета из каждой группы."
											},
											"img": {
												"type": "string",
												"description": "URL файла картинки."
											}
										},
										"required": ["name","description","group","img"]
									}
					404:
			post:
				description: |
					Обновляет информацию о предмете одежды.
				body:
					multipart/form-data:
						formParameters:
							description.name:
								type: string
							description.description:
								type: string
							description.img:
								type: string
							description.group:
								type: string
							_id:
								type: string
							conditions:
								type: string
	/choose:
		get:
			description: |
				Выбирает набор предметов одежды к заданным погодным условиям.
			queryParameters:
				season:
					enum: ["winter","spring","summer","autumn"]
					required: false
					description: |
						Время года.
				temperature:
					type: number
					required: true
					description: |
						Температура.
				windVelocity:
					type: number
					required: false
					description: |
						Скорость ветра.
			responses:
				200:
					body:
						application/json:
							schema: |
								{
									"$schema": "http://json-schema.org/schema",
									"type": "object",
									"properties": {
										"choise": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "Описание предмета гардероба."
												"properties": {
													"name": {
														"type": "string",
														"description": "Название"
													},
													"description": {
														"type": "string",
														"description": "Текст - описание"
													},
													"group": {
														"type": "string",
														"description": "Группа. Определяет, где рисовать картинку."
													},
													"img": {
														"type": "string",
														"description": "URL файла картинки."
													}
												},
												"required": ["name","description","group","img"]
											}
										}
									}
								}
